(self.webpackChunk_shopware_ag_meteor_component_library=self.webpackChunk_shopware_ag_meteor_component_library||[]).push([[88205],{"./src/components/form/sw-number-field/sw-number-field.interactive.stories.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestDecreaseByControl:function(){return TestDecreaseByControl},TestDecreaseByKeyStroke:function(){return TestDecreaseByKeyStroke},TestDecreaseConsidersMin:function(){return TestDecreaseConsidersMin},TestIncreaseByControl:function(){return TestIncreaseByControl},TestIncreaseByKeyStroke:function(){return TestIncreaseByKeyStroke},TestIncreaseConsiderMax:function(){return TestIncreaseConsiderMax},TestInputValue:function(){return TestInputValue},TestStepIncrease:function(){return TestStepIncrease},VisualTestDisabled:function(){return VisualTestDisabled},VisualTestError:function(){return VisualTestError},VisualTestHint:function(){return VisualTestHint},VisualTestInheritance:function(){return VisualTestInheritance},VisualTestPrefix:function(){return VisualTestPrefix},VisualTestSuffix:function(){return VisualTestSuffix}});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_sw_number_field_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/form/sw-number-field/sw-number-field.stories.ts");__webpack_exports__.default=Object.assign(Object.assign({},_sw_number_field_stories__WEBPACK_IMPORTED_MODULE_2__.default),{title:"Interaction Tests/Form/sw-number-field"});const TestInputValue={name:"Should keep input value",play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByRole("textbox")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"42"),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("42"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(42)}))},TestIncreaseByKeyStroke={name:"Should increase value by key stroke",args:{value:10},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByRole("textbox")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowup}"),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("11"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(11)}))},TestIncreaseByControl={name:"Should increase value by control",args:{value:10},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-increase-button")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("11"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(11)}))},TestDecreaseByKeyStroke={name:"Should decrease value by key stroke",args:{value:10},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByRole("textbox")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowdown}"),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("9"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(9)}))},TestDecreaseByControl={name:"Should decrease value by control",args:{value:10},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-decrease-button")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("9"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(9)}))},TestStepIncrease={name:"Should increase float step",args:{value:10,step:.7,numberType:"float",fillDigits:!0},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-increase-button")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowup}"),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("11.40"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(11.4)}))},TestDecreaseConsidersMin={name:"Should not decrease below min",args:{value:11,min:10},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-decrease-button")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowdown}"),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("10"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(10)}))},TestIncreaseConsiderMax={name:"Should not increase above max",args:{value:9,max:10},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-increase-button")),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowup}"),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("10"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(10)}))},VisualTestPrefix={name:"Should display prefix",args:{prefix:"prefix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.prefix)).toBeDefined()}},VisualTestSuffix={name:"Should display suffix",args:{suffix:"suffix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.suffix)).toBeDefined()}},VisualTestHint={name:"Should display hint",args:{hint:"hint"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.hint)).toBeDefined()}},VisualTestDisabled={name:"Should disable",args:{disabled:!0,value:44},play:({canvasElement:canvasElement})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"1337"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("44")}))},VisualTestError={name:"Should display error",args:{error:{code:500,detail:"Error while saving!"}},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.error.detail)).toBeDefined()}},VisualTestInheritance={name:"Should remove and restore inheritance",args:{isInheritanceField:!0,isInherited:!1},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-icon__regular-lock-open-s")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.inheritanceRestore).toBeCalled(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByTestId("sw-inheritance-switch-icon")).toBeDefined(),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-inheritance-switch-icon")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.inheritanceRemove).toBeCalled(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByTestId("sw-icon__regular-lock-open-s")).toBeDefined()}))};TestInputValue.parameters=Object.assign(Object.assign({},TestInputValue.parameters),{docs:Object.assign(Object.assign({},null===(_a=TestInputValue.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"{\n  name: 'Should keep input value',\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('textbox'));\n    await userEvent.type(canvas.getByRole('textbox'), '42');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('42');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(42);\n  }\n}"},null===(_c=null===(_b=TestInputValue.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),TestIncreaseByKeyStroke.parameters=Object.assign(Object.assign({},TestIncreaseByKeyStroke.parameters),{docs:Object.assign(Object.assign({},null===(_d=TestIncreaseByKeyStroke.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:"{\n  name: 'Should increase value by key stroke',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('textbox'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowup}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('11');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(11);\n  }\n}"},null===(_f=null===(_e=TestIncreaseByKeyStroke.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),TestIncreaseByControl.parameters=Object.assign(Object.assign({},TestIncreaseByControl.parameters),{docs:Object.assign(Object.assign({},null===(_g=TestIncreaseByControl.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:"{\n  name: 'Should increase value by control',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-increase-button'));\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('11');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(11);\n  }\n}"},null===(_j=null===(_h=TestIncreaseByControl.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),TestDecreaseByKeyStroke.parameters=Object.assign(Object.assign({},TestDecreaseByKeyStroke.parameters),{docs:Object.assign(Object.assign({},null===(_k=TestDecreaseByKeyStroke.parameters)||void 0===_k?void 0:_k.docs),{source:Object.assign({originalSource:"{\n  name: 'Should decrease value by key stroke',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('textbox'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowdown}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('9');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(9);\n  }\n}"},null===(_m=null===(_l=TestDecreaseByKeyStroke.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),TestDecreaseByControl.parameters=Object.assign(Object.assign({},TestDecreaseByControl.parameters),{docs:Object.assign(Object.assign({},null===(_o=TestDecreaseByControl.parameters)||void 0===_o?void 0:_o.docs),{source:Object.assign({originalSource:"{\n  name: 'Should decrease value by control',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-decrease-button'));\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('9');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(9);\n  }\n}"},null===(_q=null===(_p=TestDecreaseByControl.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),TestStepIncrease.parameters=Object.assign(Object.assign({},TestStepIncrease.parameters),{docs:Object.assign(Object.assign({},null===(_r=TestStepIncrease.parameters)||void 0===_r?void 0:_r.docs),{source:Object.assign({originalSource:"{\n  name: 'Should increase float step',\n  args: {\n    value: 10,\n    step: 0.7,\n    numberType: 'float',\n    fillDigits: true\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-increase-button'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowup}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('11.40');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(11.4);\n  }\n}"},null===(_t=null===(_s=TestStepIncrease.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),TestDecreaseConsidersMin.parameters=Object.assign(Object.assign({},TestDecreaseConsidersMin.parameters),{docs:Object.assign(Object.assign({},null===(_u=TestDecreaseConsidersMin.parameters)||void 0===_u?void 0:_u.docs),{source:Object.assign({originalSource:"{\n  name: 'Should not decrease below min',\n  args: {\n    value: 11,\n    min: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-decrease-button'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowdown}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('10');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(10);\n  }\n}"},null===(_w=null===(_v=TestDecreaseConsidersMin.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})}),TestIncreaseConsiderMax.parameters=Object.assign(Object.assign({},TestIncreaseConsiderMax.parameters),{docs:Object.assign(Object.assign({},null===(_x=TestIncreaseConsiderMax.parameters)||void 0===_x?void 0:_x.docs),{source:Object.assign({originalSource:"{\n  name: 'Should not increase above max',\n  args: {\n    value: 9,\n    max: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-increase-button'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowup}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('10');\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(10);\n  }\n}"},null===(_z=null===(_y=TestIncreaseConsiderMax.parameters)||void 0===_y?void 0:_y.docs)||void 0===_z?void 0:_z.source)})}),VisualTestPrefix.parameters=Object.assign(Object.assign({},VisualTestPrefix.parameters),{docs:Object.assign(Object.assign({},null===(_0=VisualTestPrefix.parameters)||void 0===_0?void 0:_0.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display prefix',\n  args: {\n    prefix: 'prefix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - prefix is defined in the sw-text-field\n    expect(canvas.getByText(args.prefix)).toBeDefined();\n  }\n}"},null===(_2=null===(_1=VisualTestPrefix.parameters)||void 0===_1?void 0:_1.docs)||void 0===_2?void 0:_2.source)})}),VisualTestSuffix.parameters=Object.assign(Object.assign({},VisualTestSuffix.parameters),{docs:Object.assign(Object.assign({},null===(_3=VisualTestSuffix.parameters)||void 0===_3?void 0:_3.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display suffix',\n  args: {\n    suffix: 'suffix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - suffix is defined in the sw-text-field\n    expect(canvas.getByText(args.suffix)).toBeDefined();\n  }\n}"},null===(_5=null===(_4=VisualTestSuffix.parameters)||void 0===_4?void 0:_4.docs)||void 0===_5?void 0:_5.source)})}),VisualTestHint.parameters=Object.assign(Object.assign({},VisualTestHint.parameters),{docs:Object.assign(Object.assign({},null===(_6=VisualTestHint.parameters)||void 0===_6?void 0:_6.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display hint',\n  args: {\n    hint: 'hint'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - hint is defined in the sw-text-field\n    expect(canvas.getByText(args.hint)).toBeDefined();\n  }\n}"},null===(_8=null===(_7=VisualTestHint.parameters)||void 0===_7?void 0:_7.docs)||void 0===_8?void 0:_8.source)})}),VisualTestDisabled.parameters=Object.assign(Object.assign({},VisualTestDisabled.parameters),{docs:Object.assign(Object.assign({},null===(_9=VisualTestDisabled.parameters)||void 0===_9?void 0:_9.docs),{source:Object.assign({originalSource:"{\n  name: 'Should disable',\n  args: {\n    disabled: true,\n    value: 44\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.type(canvas.getByRole('textbox'), '1337');\n    expect(canvas.getByRole<HTMLInputElement>('textbox').value).toBe('44');\n  }\n}"},null===(_11=null===(_10=VisualTestDisabled.parameters)||void 0===_10?void 0:_10.docs)||void 0===_11?void 0:_11.source)})}),VisualTestError.parameters=Object.assign(Object.assign({},VisualTestError.parameters),{docs:Object.assign(Object.assign({},null===(_12=VisualTestError.parameters)||void 0===_12?void 0:_12.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display error',\n  args: {\n    error: {\n      code: 500,\n      detail: \"Error while saving!\"\n    }\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - error is defined in sw-text-field\n    expect(canvas.getByText(args.error.detail)).toBeDefined();\n  }\n}"},null===(_14=null===(_13=VisualTestError.parameters)||void 0===_13?void 0:_13.docs)||void 0===_14?void 0:_14.source)})}),VisualTestInheritance.parameters=Object.assign(Object.assign({},VisualTestInheritance.parameters),{docs:Object.assign(Object.assign({},null===(_15=VisualTestInheritance.parameters)||void 0===_15?void 0:_15.docs),{source:Object.assign({originalSource:"{\n  name: 'Should remove and restore inheritance',\n  args: {\n    isInheritanceField: true,\n    isInherited: false\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-icon__regular-lock-open-s'));\n    // @ts-expect-error - events are not present in the args type\n    expect(args.inheritanceRestore).toBeCalled();\n    expect(canvas.getByTestId('sw-inheritance-switch-icon')).toBeDefined();\n    await userEvent.click(canvas.getByTestId('sw-inheritance-switch-icon'));\n    // @ts-expect-error - events are not present in the args type\n    expect(args.inheritanceRemove).toBeCalled();\n    expect(canvas.getByTestId('sw-icon__regular-lock-open-s')).toBeDefined();\n  }\n}"},null===(_17=null===(_16=VisualTestInheritance.parameters)||void 0===_16?void 0:_16.docs)||void 0===_17?void 0:_17.source)})})},"?4f7e":function(){}}]);