(self.webpackChunk_shopware_ag_meteor_component_library=self.webpackChunk_shopware_ag_meteor_component_library||[]).push([[33498],{"./src/components/form/sw-password-field/sw-password-field.interactive.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestInputValue:function(){return TestInputValue},TestLabel:function(){return TestLabel},TestPlaceholder:function(){return TestPlaceholder},VisualTestDisabled:function(){return VisualTestDisabled},VisualTestError:function(){return VisualTestError},VisualTestHint:function(){return VisualTestHint},VisualTestPrefix:function(){return VisualTestPrefix},VisualTestShowPassword:function(){return VisualTestShowPassword},VisualTestSuffix:function(){return VisualTestSuffix},__namedExportsOrder:function(){return __namedExportsOrder}});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_sw_password_field_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/form/sw-password-field/sw-password-field.stories.js");__webpack_exports__.default={..._sw_password_field_stories__WEBPACK_IMPORTED_MODULE_2__.default,title:"Interaction Tests/Form/sw-password-field"};const password="S3cr3tfor3$t",TestInputValue={name:"Should keep input value",play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByLabelText(args.label),password),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByLabelText(args.label).value).toBe(password),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(password)}},TestLabel={name:"Should display label",args:{label:"label"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.label)).toBeDefined()}},TestPlaceholder={name:"Should display placeholder",args:{placeholder:"Placeholder"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByPlaceholderText(args.placeholder)).toBeDefined()}},VisualTestPrefix={name:"Should display prefix",args:{prefix:"prefix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.prefix)).toBeDefined()}},VisualTestSuffix={name:"Should display suffix",args:{suffix:"suffix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.suffix)).toBeDefined()}},VisualTestHint={name:"Should display hint",args:{hint:"hint"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.hint)).toBeDefined()}},VisualTestDisabled={name:"Should disable",args:{disabled:!0,value:password},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByLabelText(args.label),"1337"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByLabelText(args.label).value).toBe(password)}},VisualTestError={name:"Should display error",args:{error:{code:500,detail:"Error while saving!"}},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.error.detail)).toBeDefined()}},VisualTestShowPassword={name:"Should show password",args:{value:password},play:async({canvasElement:canvasElement})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-password-field-show-button"))}};TestInputValue.parameters={...TestInputValue.parameters,docs:{...TestInputValue.parameters?.docs,source:{originalSource:"{\n  name: 'Should keep input value',\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.type(canvas.getByLabelText(args.label), password);\n    await userEvent.click(canvas.getByText('hidden'));\n    expect(canvas.getByLabelText(args.label).value).toBe(password);\n    expect(args.change).toHaveBeenCalledWith(password);\n  }\n}",...TestInputValue.parameters?.docs?.source}}},TestLabel.parameters={...TestLabel.parameters,docs:{...TestLabel.parameters?.docs,source:{originalSource:"{\n  name: 'Should display label',\n  args: {\n    label: 'label'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.label)).toBeDefined();\n  }\n}",...TestLabel.parameters?.docs?.source}}},TestPlaceholder.parameters={...TestPlaceholder.parameters,docs:{...TestPlaceholder.parameters?.docs,source:{originalSource:"{\n  name: 'Should display placeholder',\n  args: {\n    placeholder: 'Placeholder'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByPlaceholderText(args.placeholder)).toBeDefined();\n  }\n}",...TestPlaceholder.parameters?.docs?.source}}},VisualTestPrefix.parameters={...VisualTestPrefix.parameters,docs:{...VisualTestPrefix.parameters?.docs,source:{originalSource:"{\n  name: 'Should display prefix',\n  args: {\n    prefix: 'prefix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.prefix)).toBeDefined();\n  }\n}",...VisualTestPrefix.parameters?.docs?.source}}},VisualTestSuffix.parameters={...VisualTestSuffix.parameters,docs:{...VisualTestSuffix.parameters?.docs,source:{originalSource:"{\n  name: 'Should display suffix',\n  args: {\n    suffix: 'suffix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.suffix)).toBeDefined();\n  }\n}",...VisualTestSuffix.parameters?.docs?.source}}},VisualTestHint.parameters={...VisualTestHint.parameters,docs:{...VisualTestHint.parameters?.docs,source:{originalSource:"{\n  name: 'Should display hint',\n  args: {\n    hint: 'hint'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.hint)).toBeDefined();\n  }\n}",...VisualTestHint.parameters?.docs?.source}}},VisualTestDisabled.parameters={...VisualTestDisabled.parameters,docs:{...VisualTestDisabled.parameters?.docs,source:{originalSource:"{\n  name: 'Should disable',\n  args: {\n    disabled: true,\n    value: password\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.type(canvas.getByLabelText(args.label), '1337');\n    expect(canvas.getByLabelText(args.label).value).toBe(password);\n  }\n}",...VisualTestDisabled.parameters?.docs?.source}}},VisualTestError.parameters={...VisualTestError.parameters,docs:{...VisualTestError.parameters?.docs,source:{originalSource:"{\n  name: 'Should display error',\n  args: {\n    error: {\n      code: 500,\n      detail: \"Error while saving!\"\n    }\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.error.detail)).toBeDefined();\n  }\n}",...VisualTestError.parameters?.docs?.source}}},VisualTestShowPassword.parameters={...VisualTestShowPassword.parameters,docs:{...VisualTestShowPassword.parameters?.docs,source:{originalSource:"{\n  name: 'Should show password',\n  args: {\n    value: password\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-password-field-show-button'));\n  }\n}",...VisualTestShowPassword.parameters?.docs?.source}}};const __namedExportsOrder=["TestInputValue","TestLabel","TestPlaceholder","VisualTestPrefix","VisualTestSuffix","VisualTestHint","VisualTestDisabled","VisualTestError","VisualTestShowPassword"]},"?4f7e":function(){}}]);