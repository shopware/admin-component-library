(self.webpackChunk_shopware_ag_meteor_component_library=self.webpackChunk_shopware_ag_meteor_component_library||[]).push([[33498],{"./src/components/form/sw-password-field/sw-password-field.interactive.stories.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestInputValue:function(){return TestInputValue},TestLabel:function(){return TestLabel},TestPlaceholder:function(){return TestPlaceholder},VisualTestDisabled:function(){return VisualTestDisabled},VisualTestError:function(){return VisualTestError},VisualTestHint:function(){return VisualTestHint},VisualTestPrefix:function(){return VisualTestPrefix},VisualTestShowPassword:function(){return VisualTestShowPassword},VisualTestSuffix:function(){return VisualTestSuffix}});var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_sw_password_field_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/form/sw-password-field/sw-password-field.stories.ts");__webpack_exports__.default=Object.assign(Object.assign({},_sw_password_field_stories__WEBPACK_IMPORTED_MODULE_2__.default),{title:"Interaction Tests/Form/sw-password-field"});const password="S3cr3tfor3$t",TestInputValue={name:"Should keep input value",play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByLabelText(args.label),password),yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByLabelText(args.label).value).toBe(password),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(password)}))},TestLabel={name:"Should display label",args:{label:"label"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.label)).toBeDefined()}},TestPlaceholder={name:"Should display placeholder",args:{placeholder:"Placeholder"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByPlaceholderText(args.placeholder)).toBeDefined()}},VisualTestPrefix={name:"Should display prefix",args:{prefix:"prefix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.prefix)).toBeDefined()}},VisualTestSuffix={name:"Should display suffix",args:{suffix:"suffix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.suffix)).toBeDefined()}},VisualTestHint={name:"Should display hint",args:{hint:"hint"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.hint)).toBeDefined()}},VisualTestDisabled={name:"Should disable",args:{disabled:!0,value:password},play:({canvasElement:canvasElement,args:args})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByLabelText(args.label),"1337"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByLabelText(args.label).value).toBe(password)}))},VisualTestError={name:"Should display error",args:{error:{code:500,detail:"Error while saving!"}},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.error.detail)).toBeDefined()}},VisualTestShowPassword={name:"Should show password",args:{value:password},play:({canvasElement:canvasElement})=>(0,tslib__WEBPACK_IMPORTED_MODULE_3__.mG)(void 0,void 0,void 0,(function*(){const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);yield _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-password-field-show-button"))}))};TestInputValue.parameters=Object.assign(Object.assign({},TestInputValue.parameters),{docs:Object.assign(Object.assign({},null===(_a=TestInputValue.parameters)||void 0===_a?void 0:_a.docs),{source:Object.assign({originalSource:"{\n  name: 'Should keep input value',\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - label is defined in the sw-base-field\n    await userEvent.type(canvas.getByLabelText(args.label), password);\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // @ts-expect-error - label is defined in the sw-base-field\n    expect(canvas.getByLabelText(args.label).value).toBe(password);\n\n    // @ts-expect-error - events are not present in the args type\n    expect(args.change).toHaveBeenCalledWith(password);\n  }\n}"},null===(_c=null===(_b=TestInputValue.parameters)||void 0===_b?void 0:_b.docs)||void 0===_c?void 0:_c.source)})}),TestLabel.parameters=Object.assign(Object.assign({},TestLabel.parameters),{docs:Object.assign(Object.assign({},null===(_d=TestLabel.parameters)||void 0===_d?void 0:_d.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display label',\n  args: {\n    label: 'label'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - label is defined in the sw-base-field\n    expect(canvas.getByText(args.label)).toBeDefined();\n  }\n}"},null===(_f=null===(_e=TestLabel.parameters)||void 0===_e?void 0:_e.docs)||void 0===_f?void 0:_f.source)})}),TestPlaceholder.parameters=Object.assign(Object.assign({},TestPlaceholder.parameters),{docs:Object.assign(Object.assign({},null===(_g=TestPlaceholder.parameters)||void 0===_g?void 0:_g.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display placeholder',\n  args: {\n    placeholder: 'Placeholder'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - placeholder is defined in the sw-base-field\n    expect(canvas.getByPlaceholderText(args.placeholder)).toBeDefined();\n  }\n}"},null===(_j=null===(_h=TestPlaceholder.parameters)||void 0===_h?void 0:_h.docs)||void 0===_j?void 0:_j.source)})}),VisualTestPrefix.parameters=Object.assign(Object.assign({},VisualTestPrefix.parameters),{docs:Object.assign(Object.assign({},null===(_k=VisualTestPrefix.parameters)||void 0===_k?void 0:_k.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display prefix',\n  args: {\n    prefix: 'prefix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - prefix is defined in the sw-base-field\n    expect(canvas.getByText(args.prefix)).toBeDefined();\n  }\n}"},null===(_m=null===(_l=VisualTestPrefix.parameters)||void 0===_l?void 0:_l.docs)||void 0===_m?void 0:_m.source)})}),VisualTestSuffix.parameters=Object.assign(Object.assign({},VisualTestSuffix.parameters),{docs:Object.assign(Object.assign({},null===(_o=VisualTestSuffix.parameters)||void 0===_o?void 0:_o.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display suffix',\n  args: {\n    suffix: 'suffix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - suffix is defined in the sw-base-field\n    expect(canvas.getByText(args.suffix)).toBeDefined();\n  }\n}"},null===(_q=null===(_p=VisualTestSuffix.parameters)||void 0===_p?void 0:_p.docs)||void 0===_q?void 0:_q.source)})}),VisualTestHint.parameters=Object.assign(Object.assign({},VisualTestHint.parameters),{docs:Object.assign(Object.assign({},null===(_r=VisualTestHint.parameters)||void 0===_r?void 0:_r.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display hint',\n  args: {\n    hint: 'hint'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - hint is defined in the sw-base-field\n    expect(canvas.getByText(args.hint)).toBeDefined();\n  }\n}"},null===(_t=null===(_s=VisualTestHint.parameters)||void 0===_s?void 0:_s.docs)||void 0===_t?void 0:_t.source)})}),VisualTestDisabled.parameters=Object.assign(Object.assign({},VisualTestDisabled.parameters),{docs:Object.assign(Object.assign({},null===(_u=VisualTestDisabled.parameters)||void 0===_u?void 0:_u.docs),{source:Object.assign({originalSource:"{\n  name: 'Should disable',\n  args: {\n    disabled: true,\n    value: password\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - label is defined in the sw-base-field\n    await userEvent.type(canvas.getByLabelText(args.label), '1337');\n\n    // @ts-expect-error - label is defined in the sw-base-field\n    expect(canvas.getByLabelText(args.label).value).toBe(password);\n  }\n}"},null===(_w=null===(_v=VisualTestDisabled.parameters)||void 0===_v?void 0:_v.docs)||void 0===_w?void 0:_w.source)})}),VisualTestError.parameters=Object.assign(Object.assign({},VisualTestError.parameters),{docs:Object.assign(Object.assign({},null===(_x=VisualTestError.parameters)||void 0===_x?void 0:_x.docs),{source:Object.assign({originalSource:"{\n  name: 'Should display error',\n  args: {\n    error: {\n      code: 500,\n      detail: \"Error while saving!\"\n    }\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n\n    // @ts-expect-error - error is defined in the sw-base-field\n    expect(canvas.getByText(args.error.detail)).toBeDefined();\n  }\n}"},null===(_z=null===(_y=VisualTestError.parameters)||void 0===_y?void 0:_y.docs)||void 0===_z?void 0:_z.source)})}),VisualTestShowPassword.parameters=Object.assign(Object.assign({},VisualTestShowPassword.parameters),{docs:Object.assign(Object.assign({},null===(_0=VisualTestShowPassword.parameters)||void 0===_0?void 0:_0.docs),{source:Object.assign({originalSource:"{\n  name: 'Should show password',\n  args: {\n    value: password\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-password-field-show-button'));\n  }\n}"},null===(_2=null===(_1=VisualTestShowPassword.parameters)||void 0===_1?void 0:_1.docs)||void 0===_2?void 0:_2.source)})})},"?4f7e":function(){}}]);