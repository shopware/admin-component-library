"use strict";(self.webpackChunk_shopware_ag_meteor_component_library=self.webpackChunk_shopware_ag_meteor_component_library||[]).push([[47019],{"./src/components/feedback-indicator/sw-progress-bar/sw-progress-bar.interactive.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestValueProgressAt0:function(){return TestValueProgressAt0},TestValueProgressAt100:function(){return TestValueProgressAt100},TestValueProgressAt33:function(){return TestValueProgressAt33},TestValueProgressAt70of350:function(){return TestValueProgressAt70of350},VisualTestError:function(){return VisualTestError},VisualTestLabel:function(){return VisualTestLabel},VisualTestNoLabel:function(){return VisualTestNoLabel},VisualTestProgressLabelKilobyte:function(){return VisualTestProgressLabelKilobyte},VisualTestProgressLabelPercentage:function(){return VisualTestProgressLabelPercentage},VisualTestValueProgressAt10:function(){return VisualTestValueProgressAt10},VisualTestValueProgressAt100:function(){return VisualTestValueProgressAt100},VisualTestValueProgressAt100of400:function(){return VisualTestValueProgressAt100of400},VisualTestValueProgressAt400of400:function(){return VisualTestValueProgressAt400of400},VisualTestValueProgressAt50:function(){return VisualTestValueProgressAt50},__namedExportsOrder:function(){return __namedExportsOrder}});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_sw_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/feedback-indicator/sw-progress-bar/sw-progress-bar.stories.js");__webpack_exports__.default={..._sw_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__.default,title:"Interaction Tests/Feedback Indicator/sw-progress-bar"};const TestValueProgressAt0={name:"Test value progress at 0",args:{value:0,maxValue:100},play:async({canvasElement:canvasElement})=>{const progressBar=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByRole("progressbar");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar).toBeDefined(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueNow).toEqual("0"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueMax).toEqual("100")}},TestValueProgressAt33={name:"Test value progress at 33",args:{value:33,maxValue:100},play:async({canvasElement:canvasElement})=>{const progressBar=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByRole("progressbar");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar).toBeDefined(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueNow).toEqual("33"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueMax).toEqual("100")}},TestValueProgressAt70of350={name:"Test value progress at 70 of 350",args:{value:70,maxValue:350},play:async({canvasElement:canvasElement})=>{const progressBar=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByRole("progressbar");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar).toBeDefined(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueNow).toEqual("70"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueMax).toEqual("350")}},TestValueProgressAt100={name:"Test value progress at 100",args:{value:100,maxValue:100},play:async({canvasElement:canvasElement})=>{const progressBar=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByRole("progressbar");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar).toBeDefined(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueNow).toEqual("100"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(progressBar.ariaValueMax).toEqual("100")}},VisualTestError={name:"Render error correctly",args:{error:{code:500,detail:"Error while sending variants"}},play:async({canvasElement:canvasElement})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement),errorMessage=canvas.getByLabelText("Error message");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(errorMessage).toBeDefined(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(errorMessage.innerText).toContain("Error while sending variants");const progressBar=canvas.getByTestId("progress-bar-value");console.dir(progressBar),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(window.getComputedStyle(progressBar).backgroundColor).toEqual("rgb(222, 41, 76)")}},VisualTestLabel={name:"Render label correctly",args:{label:"Another example"},play:async({canvasElement:canvasElement})=>{const label=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByText("Another example");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(label).toBeDefined()}},VisualTestNoLabel={name:"Render no label",args:{label:null}},VisualTestProgressLabelPercentage={name:"Render percentage progress label",play:async({canvasElement:canvasElement})=>{const label=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByText("33%");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(label).toBeDefined()}},VisualTestProgressLabelKilobyte={name:"Render kilobyte progress label",args:{progressLabelType:"kb"},play:async({canvasElement:canvasElement})=>{const label=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement).getByText("121 kb / 356 kb");(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(label).toBeDefined()}},VisualTestValueProgressAt10={name:"Render the progressbar with 10%",args:{value:10,maxValue:100}},VisualTestValueProgressAt50={name:"Render the progressbar with 50%",args:{value:50,maxValue:100}},VisualTestValueProgressAt100={name:"Render the progressbar with 100%",args:{value:100,maxValue:100}},VisualTestValueProgressAt100of400={name:"Render the progressbar with 100 of 400 (25%)",args:{value:100,maxValue:400}},VisualTestValueProgressAt400of400={name:"Render the progressbar with 400 of 400 (100%)",args:{value:400,maxValue:400}};TestValueProgressAt0.parameters={...TestValueProgressAt0.parameters,docs:{...TestValueProgressAt0.parameters?.docs,source:{originalSource:"{\n  name: 'Test value progress at 0',\n  args: {\n    value: 0,\n    maxValue: 100\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const progressBar = canvas.getByRole('progressbar');\n    expect(progressBar).toBeDefined();\n    expect(progressBar.ariaValueNow).toEqual(\"0\");\n    expect(progressBar.ariaValueMax).toEqual(\"100\");\n  }\n}",...TestValueProgressAt0.parameters?.docs?.source}}},TestValueProgressAt33.parameters={...TestValueProgressAt33.parameters,docs:{...TestValueProgressAt33.parameters?.docs,source:{originalSource:"{\n  name: 'Test value progress at 33',\n  args: {\n    value: 33,\n    maxValue: 100\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const progressBar = canvas.getByRole('progressbar');\n    expect(progressBar).toBeDefined();\n    expect(progressBar.ariaValueNow).toEqual(\"33\");\n    expect(progressBar.ariaValueMax).toEqual(\"100\");\n  }\n}",...TestValueProgressAt33.parameters?.docs?.source}}},TestValueProgressAt70of350.parameters={...TestValueProgressAt70of350.parameters,docs:{...TestValueProgressAt70of350.parameters?.docs,source:{originalSource:"{\n  name: 'Test value progress at 70 of 350',\n  args: {\n    value: 70,\n    maxValue: 350\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const progressBar = canvas.getByRole('progressbar');\n    expect(progressBar).toBeDefined();\n    expect(progressBar.ariaValueNow).toEqual(\"70\");\n    expect(progressBar.ariaValueMax).toEqual(\"350\");\n  }\n}",...TestValueProgressAt70of350.parameters?.docs?.source}}},TestValueProgressAt100.parameters={...TestValueProgressAt100.parameters,docs:{...TestValueProgressAt100.parameters?.docs,source:{originalSource:"{\n  name: 'Test value progress at 100',\n  args: {\n    value: 100,\n    maxValue: 100\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const progressBar = canvas.getByRole('progressbar');\n    expect(progressBar).toBeDefined();\n    expect(progressBar.ariaValueNow).toEqual(\"100\");\n    expect(progressBar.ariaValueMax).toEqual(\"100\");\n  }\n}",...TestValueProgressAt100.parameters?.docs?.source}}},VisualTestError.parameters={...VisualTestError.parameters,docs:{...VisualTestError.parameters?.docs,source:{originalSource:"{\n  name: 'Render error correctly',\n  args: {\n    error: {\n      code: 500,\n      detail: 'Error while sending variants'\n    }\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const errorMessage = canvas.getByLabelText('Error message');\n    expect(errorMessage).toBeDefined();\n    expect(errorMessage.innerText).toContain('Error while sending variants');\n    const progressBar = canvas.getByTestId('progress-bar-value');\n    console.dir(progressBar);\n    expect(window.getComputedStyle(progressBar).backgroundColor).toEqual('rgb(222, 41, 76)');\n  }\n}",...VisualTestError.parameters?.docs?.source}}},VisualTestLabel.parameters={...VisualTestLabel.parameters,docs:{...VisualTestLabel.parameters?.docs,source:{originalSource:"{\n  name: 'Render label correctly',\n  args: {\n    label: 'Another example'\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const label = canvas.getByText('Another example');\n    expect(label).toBeDefined();\n  }\n}",...VisualTestLabel.parameters?.docs?.source}}},VisualTestNoLabel.parameters={...VisualTestNoLabel.parameters,docs:{...VisualTestNoLabel.parameters?.docs,source:{originalSource:"{\n  name: 'Render no label',\n  args: {\n    label: null\n  }\n}",...VisualTestNoLabel.parameters?.docs?.source}}},VisualTestProgressLabelPercentage.parameters={...VisualTestProgressLabelPercentage.parameters,docs:{...VisualTestProgressLabelPercentage.parameters?.docs,source:{originalSource:"{\n  name: 'Render percentage progress label',\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const label = canvas.getByText('33%');\n    expect(label).toBeDefined();\n  }\n}",...VisualTestProgressLabelPercentage.parameters?.docs?.source}}},VisualTestProgressLabelKilobyte.parameters={...VisualTestProgressLabelKilobyte.parameters,docs:{...VisualTestProgressLabelKilobyte.parameters?.docs,source:{originalSource:"{\n  name: 'Render kilobyte progress label',\n  args: {\n    progressLabelType: 'kb'\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const label = canvas.getByText('121 kb / 356 kb');\n    expect(label).toBeDefined();\n  }\n}",...VisualTestProgressLabelKilobyte.parameters?.docs?.source}}},VisualTestValueProgressAt10.parameters={...VisualTestValueProgressAt10.parameters,docs:{...VisualTestValueProgressAt10.parameters?.docs,source:{originalSource:"{\n  name: 'Render the progressbar with 10%',\n  args: {\n    value: 10,\n    maxValue: 100\n  }\n}",...VisualTestValueProgressAt10.parameters?.docs?.source}}},VisualTestValueProgressAt50.parameters={...VisualTestValueProgressAt50.parameters,docs:{...VisualTestValueProgressAt50.parameters?.docs,source:{originalSource:"{\n  name: 'Render the progressbar with 50%',\n  args: {\n    value: 50,\n    maxValue: 100\n  }\n}",...VisualTestValueProgressAt50.parameters?.docs?.source}}},VisualTestValueProgressAt100.parameters={...VisualTestValueProgressAt100.parameters,docs:{...VisualTestValueProgressAt100.parameters?.docs,source:{originalSource:"{\n  name: 'Render the progressbar with 100%',\n  args: {\n    value: 100,\n    maxValue: 100\n  }\n}",...VisualTestValueProgressAt100.parameters?.docs?.source}}},VisualTestValueProgressAt100of400.parameters={...VisualTestValueProgressAt100of400.parameters,docs:{...VisualTestValueProgressAt100of400.parameters?.docs,source:{originalSource:"{\n  name: 'Render the progressbar with 100 of 400 (25%)',\n  args: {\n    value: 100,\n    maxValue: 400\n  }\n}",...VisualTestValueProgressAt100of400.parameters?.docs?.source}}},VisualTestValueProgressAt400of400.parameters={...VisualTestValueProgressAt400of400.parameters,docs:{...VisualTestValueProgressAt400of400.parameters?.docs,source:{originalSource:"{\n  name: 'Render the progressbar with 400 of 400 (100%)',\n  args: {\n    value: 400,\n    maxValue: 400\n  }\n}",...VisualTestValueProgressAt400of400.parameters?.docs?.source}}};const __namedExportsOrder=["TestValueProgressAt0","TestValueProgressAt33","TestValueProgressAt70of350","TestValueProgressAt100","VisualTestError","VisualTestLabel","VisualTestNoLabel","VisualTestProgressLabelPercentage","VisualTestProgressLabelKilobyte","VisualTestValueProgressAt10","VisualTestValueProgressAt50","VisualTestValueProgressAt100","VisualTestValueProgressAt100of400","VisualTestValueProgressAt400of400"]}}]);