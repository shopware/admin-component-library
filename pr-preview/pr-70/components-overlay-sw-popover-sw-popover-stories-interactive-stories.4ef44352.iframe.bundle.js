(self.webpackChunk_shopware_ag_meteor_component_library=self.webpackChunk_shopware_ag_meteor_component_library||[]).push([[17669],{"./src/components/overlay/sw-popover/sw-popover.stories.interactive.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{VisualTestRenderChildView:function(){return VisualTestRenderChildView},VisualTestRenderPopover:function(){return VisualTestRenderPopover},VisualTestRenderPopoverTrigger:function(){return VisualTestRenderPopoverTrigger},VisualTestRenderWithoutFloat:function(){return VisualTestRenderWithoutFloat},__namedExportsOrder:function(){return __namedExportsOrder}});var _sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/overlay/sw-popover/sw-popover.stories.js"),_internal_test_helper__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/_internal/test-helper.js"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js");__webpack_exports__.default={..._sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__.default,title:"Interaction Tests/Overlay/sw-popover"};const VisualTestRenderPopoverTrigger=_sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__.Default.bind();VisualTestRenderPopoverTrigger.storyName="Should render only the popover trigger";const VisualTestRenderPopover=_sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__.Default.bind();VisualTestRenderPopover.storyName="Should render the popover",VisualTestRenderPopover.play=async()=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(document.getElementById("root"));await(0,_internal_test_helper__WEBPACK_IMPORTED_MODULE_3__.e)((()=>document.body.textContent.includes("Toggle popover")));const popoverToggle=canvas.getByText("Toggle popover");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.mV.click(popoverToggle);const popover=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(document.querySelector(".sw-floating-ui__content"));(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.l)(popover.getByText("Popover example")).toBeInTheDocument()};const VisualTestRenderChildView=_sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__.Default.bind();VisualTestRenderChildView.storyName="Should render the popover with child view",VisualTestRenderChildView.play=async()=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(document.getElementById("root"));await(0,_internal_test_helper__WEBPACK_IMPORTED_MODULE_3__.e)((()=>document.body.textContent.includes("Toggle popover")));const popoverToggle=canvas.getByText("Toggle popover");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.mV.click(popoverToggle);const popover=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(document.querySelector(".sw-floating-ui__content"));(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.l)(popover.getByText("Popover example")).toBeInTheDocument();const columnsItem=popover.getByText("Columns");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.mV.click(columnsItem)};const VisualTestRenderWithoutFloat=_sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__.Default.bind();VisualTestRenderWithoutFloat.storyName="Should render the popover with disabled float and without trigger",VisualTestRenderWithoutFloat.args={..._sw_popover_stories__WEBPACK_IMPORTED_MODULE_0__.Default.args,disableFloat:!0},VisualTestRenderWithoutFloat.play=async()=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(document.getElementById("root"));await(0,_internal_test_helper__WEBPACK_IMPORTED_MODULE_3__.e)((()=>document.body.textContent.includes("Popover example"))),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_2__.l)(canvas.getByText("Popover example")).toBeInTheDocument()};const __namedExportsOrder=["VisualTestRenderPopoverTrigger","VisualTestRenderPopover","VisualTestRenderChildView","VisualTestRenderWithoutFloat"]},"./src/components/overlay/sw-popover/sw-popover.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder}});var _sw_popover_vue__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/overlay/sw-popover/sw-popover.vue"),_sw_popover_item_sw_popover_item_vue__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/overlay/sw-popover-item/sw-popover-item.vue"),_sw_popover_item_result_sw_popover_item_result_vue__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/overlay/sw-popover-item-result/sw-popover-item-result.vue"),_internal_sw_floating_ui_sw_floating_ui_vue__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/_internal/sw-floating-ui/sw-floating-ui.vue"),_form_sw_button_sw_button_vue__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/form/sw-button/sw-button.vue");__webpack_exports__.default={title:"Components/Overlay/sw-popover",component:_sw_popover_vue__WEBPACK_IMPORTED_MODULE_0__.Z,argTypes:{"go-back":{action:"go-back",table:{disable:!0}},goBack:{action:"go-back",table:{category:"Events"}},"click-options":{table:{disable:!0}},clickOptions:{action:"click-options",table:{category:"Events"}}},args:{title:"Popover example",disableFloat:!1,childViews:[{name:"columnOrder",title:"Columns"},{name:"complex",title:"Complex example",childViews:[{name:"simple",childViews:[{name:"child_of_simple"}]}]}]}};const Default=((args,{argTypes:argTypes})=>({components:{SwPopover:_sw_popover_vue__WEBPACK_IMPORTED_MODULE_0__.Z,SwPopoverItem:_sw_popover_item_sw_popover_item_vue__WEBPACK_IMPORTED_MODULE_1__.Z,SwPopoverItemResult:_sw_popover_item_result_sw_popover_item_result_vue__WEBPACK_IMPORTED_MODULE_2__.Z,SwFloatingUi:_internal_sw_floating_ui_sw_floating_ui_vue__WEBPACK_IMPORTED_MODULE_3__.Z,SwButton:_form_sw_button_sw_button_vue__WEBPACK_IMPORTED_MODULE_4__.Z},props:Object.keys(argTypes),data(){return{itemVisible:!0,itemSwitchValue:!1,columnGroups:[{id:"visible",label:"Shown in table",actionLabel:"Hide all"},{id:"hidden",label:"Hidden in table",actionLabel:"Show all"}],columnOrderOptions:[{id:"name",label:"Name",position:0,isVisible:!0,parentGroup:"visible",isSortable:!1,isHidable:!1},{id:"manufacturer",label:"Manufacturer",position:1,isVisible:!0,parentGroup:"visible",isSortable:!0,isHidable:!0},{id:"active",label:"Active",position:2,isVisible:!0,parentGroup:"visible",isSortable:!0,isHidable:!0},{id:"price",label:"Price",position:3,isVisible:!0,parentGroup:"visible",isSortable:!0,isHidable:!0},{id:"stock",label:"Stock",position:4,isVisible:!1,parentGroup:"hidden",isSortable:!0,isHidable:!0},{id:"available",label:"Available",position:5,isVisible:!1,parentGroup:"hidden",isSortable:!0,isHidable:!0}],numberedColumn:!1,showStripes:!1,showOutlines:!1,frameOutlines:!1,openContentInPeekMode:!1}},watch:{},computed:{console(){return console}},methods:{onColumnChangeVisibility(itemId){const item=this.columnOrderOptions.find((i=>i.id===itemId));item&&(item.isVisible=!item.isVisible),item.parentGroup=item.isVisible?"visible":"hidden"},onColumnClickGroupAction(groupId){this.columnOrderOptions.forEach((item=>{"visible"===groupId&&(item.isVisible=!1,item.parentGroup="hidden"),"hidden"===groupId&&(item.isVisible=!0,item.parentGroup="visible")}))},onColumnChangeOrder({itemId:itemId,dropZone:dropZone,dropId:dropId}){const item=this.columnOrderOptions.find((i=>i.id===itemId)),dropItem=this.columnOrderOptions.find((i=>i.id===dropId));item&&dropItem&&(item.parentGroup=dropItem.parentGroup,item.isVisible=dropItem.isVisible,this.columnOrderOptions=[...this.columnOrderOptions].sort(((optionA,optionB)=>optionA.position-optionB.position)).sort(((optionA,optionB)=>optionB.id===itemId?"after"===dropZone?optionA.position<=dropItem.position?-1:1:optionA.position<dropItem.position?-1:1:optionA.id===itemId?"after"===dropZone?optionB.position>dropItem.position?-1:1:optionB.position>=dropItem.position?-1:1:0)).map(((option,index)=>({...option,position:100*index}))))}},template:'\n  <div style="max-width: 1000px; max-height: 350px; height: 350px; margin: 0 auto;">\n    <sw-popover v-bind="$props">\n      <template #trigger="{ toggleFloatingUi }">\n        <sw-button @click.stop="toggleFloatingUi">Toggle popover</sw-button>\n      </template>\n\n      {{ $props.default}}\n\n      <template #popover-items__base="{ changeView }">\n        <sw-popover-item \n          label="Columns"\n          showOptions\n          :onLabelClick="() => changeView(\'columnOrder\')"\n          @click-options="() => changeView(\'columnOrder\')"\n          :optionsCount="5"\n        />\n\n        <sw-popover-item \n          label="Numbered column"\n          icon="solid-hashtag"\n          showSwitch\n          border-top\n          :switchValue="numberedColumn"\n          @change-switch="(switchValue) => numberedColumn = switchValue"\n        />\n\n        <sw-popover-item \n          label="Show stripes"\n          icon="solid-bars"\n          showSwitch\n          :switchValue="showStripes"\n          @change-switch="(switchValue) => showStripes = switchValue"\n        />\n\n        <sw-popover-item \n          label="Show outlines"\n          icon="solid-grip-lines"\n          showSwitch\n          :switchValue="showOutlines"\n          @change-switch="(switchValue) => showOutlines = switchValue"\n        />\n\n        <sw-popover-item \n          label="Frame outlines"\n          icon="solid-highlight"\n          showSwitch\n          metaCopy="Highlight column outlines on mouse hover."\n          border-bottom\n          :switchValue="frameOutlines"\n          @change-switch="(switchValue) => frameOutlines = switchValue"\n        />\n\n        <sw-popover-item \n          label="Open content in peek mode"\n          icon="solid-sidebar-overlay"\n          showSwitch\n          metaCopy="Open content on the side. Keeps the view behind interactive."\n          border-bottom\n          :switchValue="openContentInPeekMode"\n          @change-switch="(switchValue) => openContentInPeekMode = switchValue"\n        />\n\n        <sw-popover-item \n          label="Complex popover items"\n          border-bottom\n          showOptions\n          @click-options="() => changeView(\'complex\')"\n        />\n\n        <sw-popover-item\n          type="critical"\n          label="Reset all changes"\n          icon="solid-undo"\n          :onLabelClick="() => console.log(\'Clicked on reset all changes\')"\n        />\n\n      </template>\n\n      <template #popover-items__complex="{ changeView }">\n        <sw-popover-item\n          label="Item with all features enabled and a long label"\n          showCheckbox\n          icon="solid-sidebar-overlay"\n          metaCopy="Features over features"\n          contextualDetail="Z->A"\n          shortcut="Ctrl + O"\n          showVisibility\n          :visible="itemVisible"\n          @change-visibility="(visibility) => itemVisible = visibility"\n          showSwitch\n          :switchValue="itemSwitchValue"\n          @change-switch="(switchValue) => itemSwitchValue = switchValue"\n          showOptions\n          @click-options="() => changeView(\'simple\')"\n          :optionsCount="17"\n        />\n      </template>\n\n      <template #popover-items__simple>\n        <sw-popover-item\n          label="A simple item"\n          icon="solid-sidebar-overlay"\n        />\n      </template>\n\n      <template #popover-items__columnOrder>\n        <sw-popover-item-result\n          :groups="columnGroups"\n          :options="columnOrderOptions"\n          draggable\n          hidable\n          @change-visibility="onColumnChangeVisibility"\n          @click-group-action="onColumnClickGroupAction"\n          @change-order="onColumnChangeOrder"\n        />\n      </template>\n    </sw-popover>\n  </div>\n  '})).bind();Default.storyName="sw-popover",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    SwPopover,\n    SwPopoverItem,\n    SwPopoverItemResult,\n    SwFloatingUi,\n    SwButton\n  },\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      itemVisible: true,\n      itemSwitchValue: false,\n      columnGroups: [{\n        id: \'visible\',\n        label: \'Shown in table\',\n        actionLabel: \'Hide all\'\n      }, {\n        id: \'hidden\',\n        label: \'Hidden in table\',\n        actionLabel: \'Show all\'\n      }],\n      columnOrderOptions: [{\n        id: \'name\',\n        label: \'Name\',\n        position: 0,\n        isVisible: true,\n        parentGroup: \'visible\',\n        isSortable: false,\n        isHidable: false\n      }, {\n        id: \'manufacturer\',\n        label: \'Manufacturer\',\n        position: 1,\n        isVisible: true,\n        parentGroup: \'visible\',\n        isSortable: true,\n        isHidable: true\n      }, {\n        id: \'active\',\n        label: \'Active\',\n        position: 2,\n        isVisible: true,\n        parentGroup: \'visible\',\n        isSortable: true,\n        isHidable: true\n      }, {\n        id: \'price\',\n        label: \'Price\',\n        position: 3,\n        isVisible: true,\n        parentGroup: \'visible\',\n        isSortable: true,\n        isHidable: true\n      }, {\n        id: \'stock\',\n        label: \'Stock\',\n        position: 4,\n        isVisible: false,\n        parentGroup: \'hidden\',\n        isSortable: true,\n        isHidable: true\n      }, {\n        id: \'available\',\n        label: \'Available\',\n        position: 5,\n        isVisible: false,\n        parentGroup: \'hidden\',\n        isSortable: true,\n        isHidable: true\n      }],\n      numberedColumn: false,\n      showStripes: false,\n      showOutlines: false,\n      frameOutlines: false,\n      openContentInPeekMode: false\n    };\n  },\n  watch: {},\n  computed: {\n    console() {\n      return console;\n    }\n  },\n  methods: {\n    onColumnChangeVisibility(itemId) {\n      const item = this.columnOrderOptions.find(i => i.id === itemId);\n      if (item) {\n        item.isVisible = !item.isVisible;\n      }\n      item.parentGroup = item.isVisible ? \'visible\' : \'hidden\';\n    },\n    onColumnClickGroupAction(groupId) {\n      this.columnOrderOptions.forEach(item => {\n        if (groupId === \'visible\') {\n          item.isVisible = false;\n          item.parentGroup = \'hidden\';\n        }\n        if (groupId === \'hidden\') {\n          item.isVisible = true;\n          item.parentGroup = \'visible\';\n        }\n      });\n    },\n    onColumnChangeOrder({\n      itemId,\n      dropZone,\n      dropId\n    }) {\n      const item = this.columnOrderOptions.find(i => i.id === itemId);\n      const dropItem = this.columnOrderOptions.find(i => i.id === dropId);\n      if (item && dropItem) {\n        item.parentGroup = dropItem.parentGroup;\n        item.isVisible = dropItem.isVisible;\n        this.columnOrderOptions = [...this.columnOrderOptions].sort((optionA, optionB) => {\n          return optionA.position - optionB.position;\n        }).sort((optionA, optionB) => {\n          // The logic for inserting the column before or after the target column\n          if (optionB.id === itemId) {\n            if (dropZone === \'after\') {\n              return optionA.position <= dropItem.position ? -1 : 1;\n            } else {\n              return optionA.position < dropItem.position ? -1 : 1;\n            }\n          }\n          if (optionA.id === itemId) {\n            if (dropZone === \'after\') {\n              return optionB.position > dropItem.position ? -1 : 1;\n            } else {\n              return optionB.position >= dropItem.position ? -1 : 1;\n            }\n          }\n          return 0;\n        }).map((option, index) => {\n          return {\n            ...option,\n            position: index * 100\n          };\n        });\n      }\n    }\n  },\n  template: `\n  <div style="max-width: 1000px; max-height: 350px; height: 350px; margin: 0 auto;">\n    <sw-popover v-bind="$props">\n      <template #trigger="{ toggleFloatingUi }">\n        <sw-button @click.stop="toggleFloatingUi">Toggle popover</sw-button>\n      </template>\n\n      {{ $props.default}}\n\n      <template #popover-items__base="{ changeView }">\n        <sw-popover-item \n          label="Columns"\n          showOptions\n          :onLabelClick="() => changeView(\'columnOrder\')"\n          @click-options="() => changeView(\'columnOrder\')"\n          :optionsCount="5"\n        />\n\n        <sw-popover-item \n          label="Numbered column"\n          icon="solid-hashtag"\n          showSwitch\n          border-top\n          :switchValue="numberedColumn"\n          @change-switch="(switchValue) => numberedColumn = switchValue"\n        />\n\n        <sw-popover-item \n          label="Show stripes"\n          icon="solid-bars"\n          showSwitch\n          :switchValue="showStripes"\n          @change-switch="(switchValue) => showStripes = switchValue"\n        />\n\n        <sw-popover-item \n          label="Show outlines"\n          icon="solid-grip-lines"\n          showSwitch\n          :switchValue="showOutlines"\n          @change-switch="(switchValue) => showOutlines = switchValue"\n        />\n\n        <sw-popover-item \n          label="Frame outlines"\n          icon="solid-highlight"\n          showSwitch\n          metaCopy="Highlight column outlines on mouse hover."\n          border-bottom\n          :switchValue="frameOutlines"\n          @change-switch="(switchValue) => frameOutlines = switchValue"\n        />\n\n        <sw-popover-item \n          label="Open content in peek mode"\n          icon="solid-sidebar-overlay"\n          showSwitch\n          metaCopy="Open content on the side. Keeps the view behind interactive."\n          border-bottom\n          :switchValue="openContentInPeekMode"\n          @change-switch="(switchValue) => openContentInPeekMode = switchValue"\n        />\n\n        <sw-popover-item \n          label="Complex popover items"\n          border-bottom\n          showOptions\n          @click-options="() => changeView(\'complex\')"\n        />\n\n        <sw-popover-item\n          type="critical"\n          label="Reset all changes"\n          icon="solid-undo"\n          :onLabelClick="() => console.log(\'Clicked on reset all changes\')"\n        />\n\n      </template>\n\n      <template #popover-items__complex="{ changeView }">\n        <sw-popover-item\n          label="Item with all features enabled and a long label"\n          showCheckbox\n          icon="solid-sidebar-overlay"\n          metaCopy="Features over features"\n          contextualDetail="Z->A"\n          shortcut="Ctrl + O"\n          showVisibility\n          :visible="itemVisible"\n          @change-visibility="(visibility) => itemVisible = visibility"\n          showSwitch\n          :switchValue="itemSwitchValue"\n          @change-switch="(switchValue) => itemSwitchValue = switchValue"\n          showOptions\n          @click-options="() => changeView(\'simple\')"\n          :optionsCount="17"\n        />\n      </template>\n\n      <template #popover-items__simple>\n        <sw-popover-item\n          label="A simple item"\n          icon="solid-sidebar-overlay"\n        />\n      </template>\n\n      <template #popover-items__columnOrder>\n        <sw-popover-item-result\n          :groups="columnGroups"\n          :options="columnOrderOptions"\n          draggable\n          hidable\n          @change-visibility="onColumnChangeVisibility"\n          @click-group-action="onColumnClickGroupAction"\n          @change-order="onColumnChangeOrder"\n        />\n      </template>\n    </sw-popover>\n  </div>\n  `\n})',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]},"./src/_internal/test-helper.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function waitUntilRendered(check){return new Promise(((resolve,reject)=>{const waitUntilElementLoad=(retryTime=0)=>{if(retryTime>100)return void reject(new Error(`"waitUntilRendered": condition ${check.toString().replace(/(\r\n|\n|\r)/gm,"")} not met after 2.5 seconds`));check()?resolve():window.setTimeout((()=>waitUntilElementLoad(retryTime+1)),25)};waitUntilElementLoad()}))}__webpack_require__.d(__webpack_exports__,{e:function(){return waitUntilRendered}})},"./node_modules/lodash-es/isFunction.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash-es/_baseGetTag.js"),_isObject_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/isObject.js");__webpack_exports__.Z=function isFunction(value){if(!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_0__.Z)(value))return!1;var tag=(0,_baseGetTag_js__WEBPACK_IMPORTED_MODULE_1__.Z)(value);return"[object Function]"==tag||"[object GeneratorFunction]"==tag||"[object AsyncFunction]"==tag||"[object Proxy]"==tag}},"?4f7e":function(){}}]);