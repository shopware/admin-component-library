"use strict";(self.webpackChunk_shopware_ag_meteor_component_library=self.webpackChunk_shopware_ag_meteor_component_library||[]).push([[88205],{"./src/components/form/sw-number-field/sw-number-field.interactive.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestDecreaseByControl:function(){return TestDecreaseByControl},TestDecreaseByKeyStroke:function(){return TestDecreaseByKeyStroke},TestDecreaseConsidersMin:function(){return TestDecreaseConsidersMin},TestIncreaseByControl:function(){return TestIncreaseByControl},TestIncreaseByKeyStroke:function(){return TestIncreaseByKeyStroke},TestIncreaseConsiderMax:function(){return TestIncreaseConsiderMax},TestInputValue:function(){return TestInputValue},TestStepIncrease:function(){return TestStepIncrease},VisualTestDisabled:function(){return VisualTestDisabled},VisualTestError:function(){return VisualTestError},VisualTestHint:function(){return VisualTestHint},VisualTestInheritance:function(){return VisualTestInheritance},VisualTestPrefix:function(){return VisualTestPrefix},VisualTestSuffix:function(){return VisualTestSuffix},__namedExportsOrder:function(){return __namedExportsOrder}});var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_sw_number_field_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/form/sw-number-field/sw-number-field.stories.js");__webpack_exports__.default={..._sw_number_field_stories__WEBPACK_IMPORTED_MODULE_2__.default,title:"Interaction Tests/Form/sw-number-field"};const TestInputValue={name:"Should keep input value",play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByRole("textbox")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"42"),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("42"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(42)}},TestIncreaseByKeyStroke={name:"Should increase value by key stroke",args:{value:10},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByRole("textbox")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowup}"),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("11"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(11)}},TestIncreaseByControl={name:"Should increase value by control",args:{value:10},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-increase-button")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("11"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(11)}},TestDecreaseByKeyStroke={name:"Should decrease value by key stroke",args:{value:10},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByRole("textbox")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowdown}"),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("9"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(9)}},TestDecreaseByControl={name:"Should decrease value by control",args:{value:10},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-decrease-button")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("9"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(9)}},TestStepIncrease={name:"Should increase float step",args:{value:10,step:.7,numberType:"float",fillDigits:!0},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-increase-button")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowup}"),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("11.40"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(11.4)}},TestDecreaseConsidersMin={name:"Should not decrease below min",args:{value:11,min:10},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-decrease-button")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowdown}"),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("10"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(10)}},TestIncreaseConsiderMax={name:"Should not increase above max",args:{value:9,max:10},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-number-field-increase-button")),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"{arrowup}"),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByText("hidden")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("10"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.change).toHaveBeenCalledWith(10)}},VisualTestPrefix={name:"Should display prefix",args:{prefix:"prefix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.prefix)).toBeDefined()}},VisualTestSuffix={name:"Should display suffix",args:{suffix:"suffix"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.suffix)).toBeDefined()}},VisualTestHint={name:"Should display hint",args:{hint:"hint"},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.hint)).toBeDefined()}},VisualTestDisabled={name:"Should disable",args:{disabled:!0,value:44},play:async({canvasElement:canvasElement})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.type(canvas.getByRole("textbox"),"1337"),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByRole("textbox").value).toBe("44")}},VisualTestError={name:"Should display error",args:{error:{code:500,detail:"Error while saving!"}},play:({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByText(args.error.detail)).toBeDefined()}},VisualTestInheritance={name:"Should remove and restore inheritance",args:{isInheritanceField:!0,isInherited:!1},play:async({canvasElement:canvasElement,args:args})=>{const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-icon__regular-lock-open-s")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.inheritanceRestore).toBeCalled(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByTestId("sw-inheritance-switch-icon")).toBeDefined(),await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_0__.mV.click(canvas.getByTestId("sw-inheritance-switch-icon")),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(args.inheritanceRemove).toBeCalled(),(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__.l)(canvas.getByTestId("sw-icon__regular-lock-open-s")).toBeDefined()}};TestInputValue.parameters={...TestInputValue.parameters,docs:{...TestInputValue.parameters?.docs,source:{originalSource:"{\n  name: 'Should keep input value',\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('textbox'));\n    await userEvent.type(canvas.getByRole('textbox'), '42');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('42');\n    expect(args.change).toHaveBeenCalledWith(42);\n  }\n}",...TestInputValue.parameters?.docs?.source}}},TestIncreaseByKeyStroke.parameters={...TestIncreaseByKeyStroke.parameters,docs:{...TestIncreaseByKeyStroke.parameters?.docs,source:{originalSource:"{\n  name: 'Should increase value by key stroke',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('textbox'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowup}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('11');\n    expect(args.change).toHaveBeenCalledWith(11);\n  }\n}",...TestIncreaseByKeyStroke.parameters?.docs?.source}}},TestIncreaseByControl.parameters={...TestIncreaseByControl.parameters,docs:{...TestIncreaseByControl.parameters?.docs,source:{originalSource:"{\n  name: 'Should increase value by control',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-increase-button'));\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('11');\n    expect(args.change).toHaveBeenCalledWith(11);\n  }\n}",...TestIncreaseByControl.parameters?.docs?.source}}},TestDecreaseByKeyStroke.parameters={...TestDecreaseByKeyStroke.parameters,docs:{...TestDecreaseByKeyStroke.parameters?.docs,source:{originalSource:"{\n  name: 'Should decrease value by key stroke',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole('textbox'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowdown}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('9');\n    expect(args.change).toHaveBeenCalledWith(9);\n  }\n}",...TestDecreaseByKeyStroke.parameters?.docs?.source}}},TestDecreaseByControl.parameters={...TestDecreaseByControl.parameters,docs:{...TestDecreaseByControl.parameters?.docs,source:{originalSource:"{\n  name: 'Should decrease value by control',\n  args: {\n    value: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-decrease-button'));\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('9');\n    expect(args.change).toHaveBeenCalledWith(9);\n  }\n}",...TestDecreaseByControl.parameters?.docs?.source}}},TestStepIncrease.parameters={...TestStepIncrease.parameters,docs:{...TestStepIncrease.parameters?.docs,source:{originalSource:"{\n  name: 'Should increase float step',\n  args: {\n    value: 10,\n    step: 0.7,\n    numberType: 'float',\n    fillDigits: true\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-increase-button'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowup}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('11.40');\n    expect(args.change).toHaveBeenCalledWith(11.4);\n  }\n}",...TestStepIncrease.parameters?.docs?.source}}},TestDecreaseConsidersMin.parameters={...TestDecreaseConsidersMin.parameters,docs:{...TestDecreaseConsidersMin.parameters?.docs,source:{originalSource:"{\n  name: 'Should not decrease below min',\n  args: {\n    value: 11,\n    min: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-decrease-button'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowdown}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('10');\n    expect(args.change).toHaveBeenCalledWith(10);\n  }\n}",...TestDecreaseConsidersMin.parameters?.docs?.source}}},TestIncreaseConsiderMax.parameters={...TestIncreaseConsiderMax.parameters,docs:{...TestIncreaseConsiderMax.parameters?.docs,source:{originalSource:"{\n  name: 'Should not increase above max',\n  args: {\n    value: 9,\n    max: 10\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-number-field-increase-button'));\n    await userEvent.type(canvas.getByRole('textbox'), '{arrowup}');\n    await userEvent.click(canvas.getByText('hidden'));\n\n    // Notice that the value is of type string and the value of the event is of type number\n    expect(canvas.getByRole('textbox').value).toBe('10');\n    expect(args.change).toHaveBeenCalledWith(10);\n  }\n}",...TestIncreaseConsiderMax.parameters?.docs?.source}}},VisualTestPrefix.parameters={...VisualTestPrefix.parameters,docs:{...VisualTestPrefix.parameters?.docs,source:{originalSource:"{\n  name: 'Should display prefix',\n  args: {\n    prefix: 'prefix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.prefix)).toBeDefined();\n  }\n}",...VisualTestPrefix.parameters?.docs?.source}}},VisualTestSuffix.parameters={...VisualTestSuffix.parameters,docs:{...VisualTestSuffix.parameters?.docs,source:{originalSource:"{\n  name: 'Should display suffix',\n  args: {\n    suffix: 'suffix'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.suffix)).toBeDefined();\n  }\n}",...VisualTestSuffix.parameters?.docs?.source}}},VisualTestHint.parameters={...VisualTestHint.parameters,docs:{...VisualTestHint.parameters?.docs,source:{originalSource:"{\n  name: 'Should display hint',\n  args: {\n    hint: 'hint'\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.hint)).toBeDefined();\n  }\n}",...VisualTestHint.parameters?.docs?.source}}},VisualTestDisabled.parameters={...VisualTestDisabled.parameters,docs:{...VisualTestDisabled.parameters?.docs,source:{originalSource:"{\n  name: 'Should disable',\n  args: {\n    disabled: true,\n    value: 44\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.type(canvas.getByRole('textbox'), '1337');\n    expect(canvas.getByRole('textbox').value).toBe('44');\n  }\n}",...VisualTestDisabled.parameters?.docs?.source}}},VisualTestError.parameters={...VisualTestError.parameters,docs:{...VisualTestError.parameters?.docs,source:{originalSource:"{\n  name: 'Should display error',\n  args: {\n    error: {\n      code: 500,\n      detail: \"Error while saving!\"\n    }\n  },\n  play: ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(args.error.detail)).toBeDefined();\n  }\n}",...VisualTestError.parameters?.docs?.source}}},VisualTestInheritance.parameters={...VisualTestInheritance.parameters,docs:{...VisualTestInheritance.parameters?.docs,source:{originalSource:"{\n  name: 'Should remove and restore inheritance',\n  args: {\n    isInheritanceField: true,\n    isInherited: false\n  },\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByTestId('sw-icon__regular-lock-open-s'));\n    expect(args.inheritanceRestore).toBeCalled();\n    expect(canvas.getByTestId('sw-inheritance-switch-icon')).toBeDefined();\n    await userEvent.click(canvas.getByTestId('sw-inheritance-switch-icon'));\n    expect(args.inheritanceRemove).toBeCalled();\n    expect(canvas.getByTestId('sw-icon__regular-lock-open-s')).toBeDefined();\n  }\n}",...VisualTestInheritance.parameters?.docs?.source}}};const __namedExportsOrder=["TestInputValue","TestIncreaseByKeyStroke","TestIncreaseByControl","TestDecreaseByKeyStroke","TestDecreaseByControl","TestStepIncrease","TestDecreaseConsidersMin","TestIncreaseConsiderMax","VisualTestPrefix","VisualTestSuffix","VisualTestHint","VisualTestDisabled","VisualTestError","VisualTestInheritance"]}}]);